     1                                  ; func5
     2                                  
     3                                  ; nl nil nll PROLO EPILO EXIT0 PRS PRI PRF
     4                                  %include "../inc/common.inc"
     1                              <1> ; ################################
     2                              <1> ; n × {extern global push}
     3                              <1> 
     4                              <1> %macro NEXTERN 1-*
     5                              <1> %rep %0 
     6                              <1>     extern %1
     7                              <1> %rotate 1
     8                              <1> %endrep
     9                              <1> %endmacro
    10                              <1> 
    11                              <1> %macro NGLOB 1-*
    12                              <1> %rep %0 
    13                              <1>     global %1
    14                              <1> %rotate 1
    15                              <1> %endrep
    16                              <1> %endmacro
    17                              <1> 
    18                              <1> %macro NPUSH 1-*
    19                              <1> %rep %0
    20                              <1>     push %1
    21                              <1> %rotate 1
    22                              <1> %endrep
    23                              <1> %endmacro
    24                              <1> 
    25                              <1> ;###########################################
    26                              <1> ; Constants, Essential macros
    27                              <1> 
    28                              <1> nil equ 0
    29                              <1> nl equ 10
    30                              <1> 
    31                              <1> %define NLL nl,nil
    32                              <1> 
    33                              <1> %macro PROLO 0
    34                              <1>     push rbp
    35                              <1>     mov rbp, rsp
    36                              <1> %endmacro
    37                              <1> 
    38                              <1> %macro EPILO 0
    39                              <1>     mov rsp, rbp
    40                              <1>     pop rbp
    41                              <1>     ret
    42                              <1> %endmacro
    43                              <1> 
    44                              <1> %macro MAIN_EPILO_EXIT0 0
    45                              <1>     mov rsp, rbp
    46                              <1>     pop rbp
    47                              <1>     mov rax, 60 ; exit
    48                              <1>     xor rdi, rdi ; exit code 0
    49                              <1>     syscall
    50                              <1> %endmacro
    51                              <1> 
    52                              <1> ; ######################
    53                              <1> ; PRINTF
    54                              <1> 
    55                              <1> extern printf
    56                              <1> 
    57                              <1> ; ############################
    58                              <1> ; Prints
    59                              <1> 
    60                              <1> ; print_string format 1x string
    61                              <1> %macro PR1 2
    62                              <1>     mov rdi, %1 ; fmt
    63                              <1>     mov rsi, %2 ; var1
    64                              <1>     xor rax, rax
    65                              <1>     call printf
    66                              <1> %endmacro
    67                              <1> 
    68                              <1> ; print_string_int format str1 num1
    69                              <1> %macro PR2 3
    70                              <1>     mov rdi, %1 ; fmt
    71                              <1>     mov rsi, %2 ; var1
    72                              <1>     mov rdx, %3 ; var2
    73                              <1>     xor rax, rax
    74                              <1>     call printf
    75                              <1> %endmacro
    76                              <1> 
    77                              <1> 
    78                              <1> ; #################################
    79                              <1> ; Floats
    80                              <1> 
    81                              <1> ; expecting xmm0..%2 with value(s)
    82                              <1> %macro PRFX 2
    83                              <1>     mov rdi, %1 ; fmt
    84                              <1>     mov rax, %2 ; %2 floats
    85                              <1>     call printf
    86                              <1> %endmacro
    87                              <1> 
    88                              <1> ; print_float format 1 x float
    89                              <1> %macro PRF1 2
    90                              <1>     movsd xmm0, %2
    91                              <1>     PRFX %1, 1
    92                              <1> %endmacro
    93                              <1> 
    94                              <1> ; print_float format 2 x floats
    95                              <1> ; expecting xmm0,1 with value
    96                              <1> %macro PRF2 3
    97                              <1>     movsd xmm0, %2 ; float 1
    98                              <1>     movsd xmm1, %3 ; float 2
    99                              <1>     PRFX %1, 2
   100                              <1> %endmacro
   101                              <1> 
     5                                  
     6                                  ;#####################################
     7                                  ; SECTIONS
     8                                  
     9                                  section .data
    10                                  
    11                                  ; n x db
    12                                  %macro NBD 1-*
    13                                  %rep %0
    14                                      %defstr s %1
    15                                      %1 db s, nil
    16                                  %rotate 1
    17                                  %endrep
    18                                  %endmacro
    19                                  
    20                                  
    21                                  NBD A, B, C, D, E, F, G, H, I, J
    21                              <1> %rep %0
    21                              <1>  %defstr s %1
    21                              <1>  %1 db s, nil
    21                              <1> %rotate 1
    21                              <1> %endrep
    21                              <2>  %defstr s %1
    21 00000000 4100                <2>  %1 db s, nil
    21                              <2> %rotate 1
    21                              <2>  %defstr s %1
    21 00000002 4200                <2>  %1 db s, nil
    21                              <2> %rotate 1
    21                              <2>  %defstr s %1
    21 00000004 4300                <2>  %1 db s, nil
    21                              <2> %rotate 1
    21                              <2>  %defstr s %1
    21 00000006 4400                <2>  %1 db s, nil
    21                              <2> %rotate 1
    21                              <2>  %defstr s %1
    21 00000008 4500                <2>  %1 db s, nil
    21                              <2> %rotate 1
    21                              <2>  %defstr s %1
    21 0000000A 4600                <2>  %1 db s, nil
    21                              <2> %rotate 1
    21                              <2>  %defstr s %1
    21 0000000C 4700                <2>  %1 db s, nil
    21                              <2> %rotate 1
    21                              <2>  %defstr s %1
    21 0000000E 4800                <2>  %1 db s, nil
    21                              <2> %rotate 1
    21                              <2>  %defstr s %1
    21 00000010 4900                <2>  %1 db s, nil
    21                              <2> %rotate 1
    21                              <2>  %defstr s %1
    21 00000012 4A00                <2>  %1 db s, nil
    21                              <2> %rotate 1
    22 00000014 737472696E673A2025-     fmt1 db "string: %s%s%s%s%s%s%s%s%s%s", NLL
    22 0000001D 732573257325732573-
    22 00000026 257325732573257325-
    22 0000002F 730A00             
    23                                  
    24 00000032 1F85EB51B81E0940        pi dq 3.14
    25 0000003A CF803D25670A00          fmt2 db "π=%g", NLL
    26                                  
    27                                  section .bss
    28                                  
    29                                  
    30                                  section .text
    31                                  
    32                                  
    33                                  ; #############################
    34                                  global main
    35                                  main:
    36                                  PROLO
    36 00000000 55                  <1>  push rbp
    36 00000001 4889E5              <1>  mov rbp, rsp
    37                                  
    38 00000004 48BF-                   mov rdi, fmt1 ; 1
    38 00000006 [1400000000000000] 
    39 0000000E 48BE-                   mov rsi, A ; 2
    39 00000010 [0000000000000000] 
    40 00000018 48BA-                   mov rdx, B ; 3 
    40 0000001A [0200000000000000] 
    41 00000022 48B9-                   mov rcx, C ; 4
    41 00000024 [0400000000000000] 
    42 0000002C 49B8-                   mov r8, D ; 5
    42 0000002E [0600000000000000] 
    43 00000036 49B9-                   mov r9, E ; 6
    43 00000038 [0800000000000000] 
    44                                  
    45                                  NPUSH F, G, H, I, J
    45                              <1> %rep %0
    45                              <1>  push %1
    45                              <1> %rotate 1
    45                              <1> %endrep
    45 00000040 68[0A000000]        <2>  push %1
    45                              <2> %rotate 1
    45 00000045 68[0C000000]        <2>  push %1
    45                              <2> %rotate 1
    45 0000004A 68[0E000000]        <2>  push %1
    45                              <2> %rotate 1
    45 0000004F 68[10000000]        <2>  push %1
    45                              <2> %rotate 1
    45 00000054 68[12000000]        <2>  push %1
    45                              <2> %rotate 1
    46                                  
    47 00000059 4831C0                  xor rax, rax
    48 0000005C E8(00000000)            call printf
    49                                  
    50                                  ; 16byte align
    51 00000061 4883E4F0                and rsp, 0xfffffffffffffff0
    52                                  PRF1 fmt2, [pi]
    52 00000065 F20F100425-         <1>  movsd xmm0, %2
    52 0000006A [32000000]          <1>
    52                              <1>  PRFX %1, 1
    52 0000006E 48BF-               <2>  mov rdi, %1
    52 00000070 [3A00000000000000]  <2>
    52 00000078 B801000000          <2>  mov rax, %2
    52 0000007D E8(00000000)        <2>  call printf
    53                                  
    54                                  
    55                                  MAIN_EPILO_EXIT0
    55 00000082 4889EC              <1>  mov rsp, rbp
    55 00000085 5D                  <1>  pop rbp
    55 00000086 B83C000000          <1>  mov rax, 60
    55 0000008B 4831FF              <1>  xor rdi, rdi
    55 0000008E 0F05                <1>  syscall
    56                                  ; main:
    57                                  
