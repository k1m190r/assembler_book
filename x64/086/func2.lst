     1                                  ; func2
     2                                  
     3                                  ; nl nil nll PROLO EPILO EXIT0 PRS PRI PRF
     4                                  %include "../inc/common.inc"
     1                              <1> ;###########################################
     2                              <1> ; Constants & Macros
     3                              <1> 
     4                              <1> nil equ 0
     5                              <1> nl equ 10
     6                              <1> 
     7                              <1> %define NLL nl,nil
     8                              <1> 
     9                              <1> %macro PROLO 0
    10                              <1>     push rbp
    11                              <1>     mov rbp, rsp
    12                              <1> %endmacro
    13                              <1> 
    14                              <1> %macro EPILO 0
    15                              <1>     mov rsp, rbp
    16                              <1>     pop rbp
    17                              <1>     ret
    18                              <1> %endmacro
    19                              <1> 
    20                              <1> %macro MAIN_EPILO_EXIT0 0
    21                              <1>     mov rsp, rbp
    22                              <1>     pop rbp
    23                              <1>     mov rax, 60 ; exit
    24                              <1>     xor rdi, rdi ; exit code 0
    25                              <1>     syscall
    26                              <1> %endmacro
    27                              <1> 
    28                              <1> ; ######################
    29                              <1> ; PRINTF
    30                              <1> 
    31                              <1> extern printf
    32                              <1> 
    33                              <1> %macro PR 0
    34                              <1>     call printf
    35                              <1> %endmacro
    36                              <1> 
    37                              <1> ; ############################
    38                              <1> ; Strings
    39                              <1> 
    40                              <1> ; print_string format 1x string
    41                              <1> %macro PRS 2
    42                              <1>     xor rax, rax
    43                              <1>     mov rdi, %1 ; fmt
    44                              <1>     mov rsi, %2 ; msg
    45                              <1>     PR
    46                              <1> %endmacro
    47                              <1> 
    48                              <1> ; print_string_int format str1 num1
    49                              <1> %macro PRSI 3
    50                              <1>     xor rax, rax
    51                              <1>     mov rdi, %1 ; fmt
    52                              <1>     mov rsi, %2 ; str1
    53                              <1>     mov rdx, [%3] ; int1
    54                              <1>     PR
    55                              <1> %endmacro
    56                              <1> 
    57                              <1> ; ###########################
    58                              <1> ; Integers
    59                              <1> 
    60                              <1> ; print_int format 1x int
    61                              <1> %macro PRI 2
    62                              <1>     xor rax, rax
    63                              <1>     mov rdi, %1 ; fmt
    64                              <1>     mov rsi, [%2] ; int
    65                              <1>     PR
    66                              <1> %endmacro
    67                              <1> 
    68                              <1> ; print_int format 2x int
    69                              <1> %macro PRI2 3
    70                              <1>     xor rax, rax
    71                              <1>     mov rdi, %1 ; fmt
    72                              <1>     mov rsi, [%2] ; int1
    73                              <1>     mov rdx, [%3] ; int2
    74                              <1>     PR
    75                              <1> %endmacro
    76                              <1> 
    77                              <1> ; #################################
    78                              <1> ; Floats
    79                              <1> 
    80                              <1> 
    81                              <1> ; expecting xmm0..%2 with value(s)
    82                              <1> %macro PRFX 2
    83                              <1>     mov rax, %2 ; x floats
    84                              <1>     mov rdi, %1 ; fmt
    85                              <1>     PR
    86                              <1> %endmacro
    87                              <1> 
    88                              <1> ; print_float format 1 x float
    89                              <1> %macro PRF1 2
    90                              <1>     movsd xmm0, [%2]
    91                              <1>     PRFX0 %1, 1
    92                              <1> %endmacro
    93                              <1> 
    94                              <1> ; print_float format 2 x floats
    95                              <1> ; expecting xmm0,1 with value
    96                              <1> %macro PRF2 3
    97                              <1>     movsd xmm0, [%2] ; float 1
    98                              <1>     movsd xmm1, [%3] ; float 2
    99                              <1>     PRFX %1, 2
   100                              <1> %endmacro
   101                              <1> 
     5                                  
     6                                  ;#####################################
     7                                  ; SECTIONS
     8                                  
     9                                  section .data
    10                                  
    11                                  ; numbers
    12 00000000 0000000000002440        rad dq 10.0
    13 00000008 413D525E3220C39720-     fmt db "A=R^2 × π=%2$g^2 × π=%1$g", NLL
    13 00000011 CF803D253224675E32-
    13 0000001A 20C39720CF803D2531-
    13 00000023 24670A00           
    14                                  
    15                                  section .bss
    16                                  
    17                                  
    18                                  section .text
    19                                  
    20                                  ; ################################
    21                                  area:
    22                                  section .data
    23 00000027 50455254FB210940        .pi dq 3.141592654 ; local to area
    24                                  
    25                                  section .text
    26                                  PROLO
    26 00000000 55                  <1>  push rbp
    26 00000001 4889E5              <1>  mov rbp, rsp
    27 00000004 F20F100425-                 movsd xmm0, [rad] ; R
    27 00000009 [00000000]         
    28 0000000D F20F590425-                 mulsd xmm0, [rad] ; * R
    28 00000012 [00000000]         
    29 00000016 F20F590425-                 mulsd xmm0, [.pi] ; * π
    29 0000001B [27000000]         
    30                                  EPILO
    30 0000001F 4889EC              <1>  mov rsp, rbp
    30 00000022 5D                  <1>  pop rbp
    30 00000023 C3                  <1>  ret
    31                                  ;ret
    32                                  
    33                                  ; ##############################
    34                                  circum:
    35                                  section .data
    36 0000002F 1F85EB51B81E0940            .pi dq 3.14 ; local to circum
    37                                  
    38                                  section .text
    39                                  PROLO
    39 00000024 55                  <1>  push rbp
    39 00000025 4889E5              <1>  mov rbp, rsp
    40 00000028 F20F100425-                 movsd xmm0, [rad] ; R
    40 0000002D [00000000]         
    41 00000031 F20F580425-                 addsd xmm0, [rad] ; + R
    41 00000036 [00000000]         
    42 0000003A F20F590425-                 mulsd xmm0, [.pi] ; * π
    42 0000003F [2F000000]         
    43                                  EPILO
    43 00000043 4889EC              <1>  mov rsp, rbp
    43 00000046 5D                  <1>  pop rbp
    43 00000047 C3                  <1>  ret
    44                                  ;ret
    45                                  
    46                                  ; ###############################
    47                                  circle:
    48                                  section .data
    49 00000037 417265613D25670A00      .fmt_area db "Area=%g", NLL
    50 00000040 43697263756D3D2567-     .fmt_circ db "Circum=%g", NLL
    50 00000049 0A00               
    51                                  
    52                                  section .text
    53                                  PROLO
    53 00000048 55                  <1>  push rbp
    53 00000049 4889E5              <1>  mov rbp, rsp
    54                                  
    55 0000004C E8AFFFFFFF              call area
    56                                  PRFX .fmt_area, 1
    56 00000051 B801000000          <1>  mov rax, %2
    56 00000056 48BF-               <1>  mov rdi, %1
    56 00000058 [3700000000000000]  <1>
    56                              <1>  PR
    56 00000060 E8(00000000)        <2>  call printf
    57 00000065 E8BAFFFFFF              call circum
    58                                  PRFX .fmt_circ, 1
    58 0000006A B801000000          <1>  mov rax, %2
    58 0000006F 48BF-               <1>  mov rdi, %1
    58 00000071 [4000000000000000]  <1>
    58                              <1>  PR
    58 00000079 E8(00000000)        <2>  call printf
    59                                  
    60                                  EPILO
    60 0000007E 4889EC              <1>  mov rsp, rbp
    60 00000081 5D                  <1>  pop rbp
    60 00000082 C3                  <1>  ret
    61                                  ;ret
    62                                  
    63                                  ; #############################
    64                                  global main
    65                                  main:
    66                                  PROLO
    66 00000083 55                  <1>  push rbp
    66 00000084 4889E5              <1>  mov rbp, rsp
    67                                  
    68 00000087 E8BCFFFFFF              call circle
    69                                  
    70                                  MAIN_EPILO_EXIT0
    70 0000008C 4889EC              <1>  mov rsp, rbp
    70 0000008F 5D                  <1>  pop rbp
    70 00000090 B83C000000          <1>  mov rax, 60
    70 00000095 4831FF              <1>  xor rdi, rdi
    70 00000098 0F05                <1>  syscall
    71                                  ;main:
    72                                  
